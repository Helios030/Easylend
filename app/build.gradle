import com.loanspeed.config.Config
import com.loanspeed.config.Lib

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk Config.compileSdk

    defaultConfig {
        applicationId Config.appId
        minSdk Config.minSdk
        targetSdk Config.targetSdk
        versionCode Config.versionCode
        versionName Config.versionName
        multiDexEnabled true
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a"
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = "${Config.packAppName}-${variant.productFlavors[1].name}-${variant.buildType.name}-v${defaultConfig.versionName}.apk"
                outputFileName = fileName
            }
        }
    }

    signingConfigs {
        loan {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            signingConfig signingConfigs.loan
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            shrinkResources false
            minifyEnabled false
            signingConfig signingConfigs.loan
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    productFlavors {
        flavorDimensions "default", "chanel"

        app {
            buildConfigField('String', 'CHANNEL', Config.channel)
            resValue('string', 'app_name', Config.appName)
            buildConfigField('String', 'APP_NAME', Config.appName)
            buildConfigField('String', "PRIVACY_POLICY", Config.privacyPolicy)
            buildConfigField('String', "REPAYMENT_GUIDELINES", Config.repaymentGuidelines)
            buildConfigField('String', "AREA_CODE", Config.areaCode)
            dimension "default"
        }

        online {
            buildConfigField('String', 'BASE_URL', Config.onLineBaseUrl)
            dimension "chanel"
        }

        beta {
            buildConfigField('String', 'BASE_URL', Config.betaBaseUrl)
            dimension "chanel"
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.loanspeed.speed'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.4.+'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

    implementation(Lib.core_ktx)
    implementation(Lib.lifecycle_runtime_ktx)
    implementation(Lib.activity_compose)
    implementation(Lib.compose_ui)
    implementation(Lib.compose_ui_tooling)
    implementation(Lib.compose_material)
    implementation(Lib.runtime_livedata)
    implementation(Lib.lifecycle_viewmodel_compose)
    implementation(Lib.navigation_compose)
    implementation(Lib.accompanist_swipe_refresh)
    implementation(Lib.accompanist_pager)
    implementation(Lib.accompanist_pager_indicators)
    implementation(Lib.multidex)
    implementation(Lib.auto_size)
    implementation(Lib.retrofit)
    implementation(Lib.gson)
    implementation(Lib.converter_gson)
    implementation(Lib.work_runtime)
    implementation(Lib.logging_interceptor)
    implementation(Lib.lottie_compose)
    implementation(Lib.compose_icon)
    implementation(Lib.hilt_android)
    kapt (Lib.hilt_kapt)
    implementation (Lib.security_ktx)
    implementation (Lib.hilt_navigation)
    implementation (Lib.navigation_animation)
    implementation (Lib.permission)
    implementation (Lib.android_id)
    implementation (Lib.rootbeer)




}